from flask import Flask
import requests
import os
import time
import logging
import threading

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(message)s')
logger = logging.getLogger()

app = Flask(__name__)

TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
TELEGRAM_CHAT_ID = os.getenv('TELEGRAM_CHAT_ID')
DISCORD_TOKEN = os.getenv('DISCORD_TOKEN')
DISCORD_CHANNEL_ID = os.getenv('DISCORD_CHANNEL_ID')

def send_telegram(text):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    data = {"chat_id": TELEGRAM_CHAT_ID, "text": text}
    try:
        requests.post(url, data=data)
        logger.info("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ Telegram: {e}")

def check_discord_connection():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Discord API –∏ –∏—â–µ—Ç Tomato"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º 100 —Å–æ–æ–±—â–µ–Ω–∏–π –≤–º–µ—Å—Ç–æ 50
        url = f"https://discord.com/api/v10/channels/{DISCORD_CHANNEL_ID}/messages?limit=100"
        headers = {"Authorization": f"Bot {DISCORD_TOKEN}"}
        
        response = requests.get(url, headers=headers)
        
        if response.status_code == 200:
            messages = response.json()
            logger.info(f"üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(messages)}")
            
            # üîç –õ–û–ì–ò–†–£–ï–ú –ü–ï–†–í–´–ï 3 –°–û–û–ë–©–ï–ù–ò–Ø –î–õ–Ø –î–ï–ë–ê–ì–ê
            for i, message in enumerate(messages[:3]):
                logger.info(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ {i}: {message['content'][:100]}...")
            
            # üîç –û–°–ù–û–í–ù–û–ô –ü–û–ò–°–ö TOMATO
            for message in messages:
                if ':Tomato:' in message['content']:
                    logger.info(f"üçÖ TOMATO –ù–ê–ô–î–ï–ù –í –°–û–û–ë–©–ï–ù–ò–ò!")
                    logger.info(f"üìù –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: {message['content'][:100]}...")
                    return True, message['content']
            
            logger.info("‚ùå Tomato –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 100 —Å–æ–æ–±—â–µ–Ω–∏—è—Ö")
            return False, None
        else:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ Discord API: {response.status_code}")
            return False, None
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False, None

def discord_monitor():
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç –∫–∞–Ω–∞–ª Discord"""
    logger.info("üöÄ –ó–ê–ü–£–°–ö–ê–Æ DSCORD –ú–û–ù–ò–¢–û–†...")
    
    # –¢–µ—Å—Ç–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    success, message = check_discord_connection()
    
    if success:
        send_telegram("‚úÖ Discord –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ! –ú–æ–Ω–∏—Ç–æ—Ä—é Tomato...")
        logger.info("üîç –ù–∞—á–∏–Ω–∞—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Tomato...")
    else:
        send_telegram("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Discord")
        logger.error("‚ùå –ù–ï –£–î–ê–õ–û–°–¨ –ü–û–î–ö–õ–Æ–ß–ò–¢–¨–°–Ø –ö DISCORD")
        return
    
    last_detected = False
    
    while True:
        try:
            found, message = check_discord_connection()
            
            if found and not last_detected:
                logger.info("üçÖ TOMATO –û–ë–ù–ê–†–£–ñ–ï–ù!")
                send_telegram("üçÖ TOMATO –í –ü–†–û–î–ê–ñ–ï! üçÖ")
                send_telegram(f"üìã {message}")
                last_detected = True
            elif not found:
                last_detected = False
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")
            
        time.sleep(30)

@app.route('/')
def home():
    return "üçÖ –ú–æ–Ω–∏—Ç–æ—Ä—é –∫–∞–Ω–∞–ª –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç Tomato"

# –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä
logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞—é —Å–∏—Å—Ç–µ–º—É...")
send_telegram("üîç –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...")
monitor_thread = threading.Thread(target=discord_monitor)
monitor_thread.daemon = True
monitor_thread.start()

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
