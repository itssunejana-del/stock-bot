from flask import Flask
import requests
import os
import time
import logging
import threading
from datetime import datetime, timedelta

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(message)s')
logger = logging.getLogger(__name__)

app = Flask(__name__)

TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
TELEGRAM_CHAT_ID = os.getenv('TELEGRAM_CHAT_ID')
DISCORD_TOKEN = os.getenv('DISCORD_TOKEN')
DISCORD_CHANNEL_ID = os.getenv('DISCORD_CHANNEL_ID')

# –•—Ä–∞–Ω–∏–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
last_processed_message_id = None
# –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
last_notification_time = None
# –ö–æ—Ä–æ—Ç–∫–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ (4.5 –º–∏–Ω—É—Ç—ã) —á—Ç–æ–±—ã –ª–æ–≤–∏—Ç—å –∫–∞–∂–¥—ã–π —Å—Ç–æ–∫
NOTIFICATION_COOLDOWN = timedelta(minutes=4, seconds=30)

def send_telegram(text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"""
    try:
        url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
        data = {"chat_id": TELEGRAM_CHAT_ID, "text": text}
        response = requests.post(url, data=data, timeout=10)
        logger.info(f"üì± Telegram –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {response.status_code}")
        return True
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ Telegram: {e}")
        return False

def check_discord_messages():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–∞–º–æ–µ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª–µ Discord"""
    global last_processed_message_id, last_notification_time
    
    try:
        url = f"https://discord.com/api/v10/channels/{DISCORD_CHANNEL_ID}/messages?limit=1"
        headers = {"Authorization": f"Bot {DISCORD_TOKEN}"}
        
        response = requests.get(url, headers=headers, timeout=10)
        
        if response.status_code == 200:
            messages = response.json()
            
            if not messages:
                return False, "–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ", None
            
            message = messages[0]
            message_id = message['id']
            author = message['author']['username']
            
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏
            if message_id == last_processed_message_id:
                return False, "–°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ", message_id
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–º–±–∞–¥—ã –Ω–∞ –Ω–∞–ª–∏—á–∏–µ Tomato
            embeds = message.get('embeds', [])
            for embed in embeds:
                # –°–æ–±–∏—Ä–∞–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç –∏–∑ —ç–º–±–∞–¥–∞
                all_embed_text = ""
                
                for field in embed.get('fields', []):
                    all_embed_text += f" {field.get('name', '')} {field.get('value', '')}"
                
                all_embed_text += f" {embed.get('description', '')} {embed.get('title', '')}"
                
                # –ò—â–µ–º Tomato –≤ –ª—é–±–æ–º –≤–∏–¥–µ
                if any(tomato_keyword in all_embed_text for tomato_keyword in ['Tomato', ':Tomato:', 'üçÖ']):
                    logger.info(f"üéØ –ù–û–í–´–ô TOMATO –ù–ê–ô–î–ï–ù –í –°–û–û–ë–©–ï–ù–ò–ò {message_id}!")
                    
                    current_time = datetime.now()
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—É–ª–¥–∞—É–Ω (–ª–æ–≥–∏—Ä—É–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è)
                    if last_notification_time:
                        time_passed = current_time - last_notification_time
                        time_left = NOTIFICATION_COOLDOWN - time_passed
                        
                        if time_left.total_seconds() > 0:
                            minutes_left = int(time_left.total_seconds() / 60)
                            seconds_left = int(time_left.total_seconds() % 60)
                            logger.info(f"‚è≥ –ö—É–ª–¥–∞—É–Ω –∞–∫—Ç–∏–≤–µ–Ω: {minutes_left}–º {seconds_left}—Å –æ—Å—Ç–∞–ª–æ—Å—å")
                            # –ù–æ –≤—Å–µ —Ä–∞–≤–Ω–æ –æ—Ç–º–µ—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ
                            last_processed_message_id = message_id
                            return False, f"–ö—É–ª–¥–∞—É–Ω: {minutes_left}–º {seconds_left}—Å", message_id
                    
                    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
                    telegram_message = f"üö® TOMATO –í –ü–†–û–î–ê–ñ–ï! üçÖ\n\n"
                    
                    for field in embed.get('fields', []):
                        field_name = field.get('name', '')
                        field_value = field.get('value', '')
                        if field_name and field_value:
                            telegram_message += f"‚Ä¢ {field_name}: {field_value}\n"
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ ID —Å–æ–æ–±—â–µ–Ω–∏—è
                    last_notification_time = current_time
                    last_processed_message_id = message_id
                    
                    logger.info(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è {message_id}")
                    
                    return True, telegram_message, message_id
            
            # –ï—Å–ª–∏ Tomato –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤—Å–µ —Ä–∞–≤–Ω–æ –æ—Ç–º–µ—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ
            last_processed_message_id = message_id
            return False, "Tomato –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏", message_id
            
        else:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ Discord API: {response.status_code}")
            return False, f"–û—à–∏–±–∫–∞ API: {response.status_code}", None
            
    except Exception as e:
        logger.error(f"üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")
        return False, f"–û—à–∏–±–∫–∞: {str(e)}", None

@app.route('/')
def home():
    return """
    <h1>üçÖ Tomato Monitor Bot</h1>
    <p>–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç –∫–∞–Ω–∞–ª Discord!</p>
    <p>–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: <b id="lastMsg">–ó–∞–≥—Ä—É–∑–∫–∞...</b></p>
    <p>–°—Ç–∞—Ç—É—Å –∫—É–ª–¥–∞—É–Ω–∞: <b id="cooldownStatus">–ó–∞–≥—Ä—É–∑–∫–∞...</b></p>
    <p><a href="/check">üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ–π—á–∞—Å</a></p>
    <p><a href="/reset">üîÑ –°–±—Ä–æ—Å–∏—Ç—å –∫—É–ª–¥–∞—É–Ω</a></p>
    <script>
        function updateStatus() {
            fetch('/status').then(r => r.json()).then(data => {
                document.getElementById('lastMsg').textContent = data.last_message || '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π';
                document.getElementById('cooldownStatus').textContent = data.cooldown_status;
            });
        }
        updateStatus();
        setInterval(updateStatus, 2000);
    </script>
    """

@app.route('/status')
def get_status():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"""
    global last_processed_message_id, last_notification_time
    
    current_time = datetime.now()
    cooldown_status = "‚úÖ –ì–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ"
    
    if last_notification_time:
        time_passed = current_time - last_notification_time
        time_left = NOTIFICATION_COOLDOWN - time_passed
        
        if time_left.total_seconds() > 0:
            minutes_left = int(time_left.total_seconds() / 60)
            seconds_left = int(time_left.total_seconds() % 60)
            cooldown_status = f"‚è≥ –ö—É–ª–¥–∞—É–Ω: {minutes_left}–º {seconds_left}—Å"
        else:
            cooldown_status = "‚úÖ –ì–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ"
    
    return {
        'last_message': last_processed_message_id or "–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π",
        'cooldown_status': cooldown_status,
        'cooldown_minutes': NOTIFICATION_COOLDOWN.total_seconds() / 60
    }

@app.route('/check')
def check_messages():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è"""
    found, message, msg_id = check_discord_messages()
    
    result = "üçÖ TOMATO –ù–ê–ô–î–ï–ù!" if found else "‚ùå Tomato –Ω–µ –Ω–∞–π–¥–µ–Ω"
    
    if found:
        success = send_telegram(message)
        result += " ‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!" if success else " ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏"
    
    status = get_status()
    
    return f"""
    <h1>–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏</h1>
    <p>–†–µ–∑—É–ª—å—Ç–∞—Ç: <b>{result}</b></p>
    <p>ID —Å–æ–æ–±—â–µ–Ω–∏—è: {msg_id or '–ù–µ—Ç'}</p>
    <p>–°—Ç–∞—Ç—É—Å –∫—É–ª–¥–∞—É–Ω–∞: {status['cooldown_status']}</p>
    <p><a href="/">‚Üê –ù–∞–∑–∞–¥</a></p>
    """

@app.route('/reset')
def reset_cooldown():
    """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∫—É–ª–¥–∞—É–Ω"""
    global last_notification_time
    last_notification_time = None
    return """
    <h1>üîÑ –ö—É–ª–¥–∞—É–Ω —Å–±—Ä–æ—à–µ–Ω!</h1>
    <p>–ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ Tomato.</p>
    <p><a href="/">‚Üê –ù–∞–∑–∞–¥</a></p>
    """

def discord_monitor():
    """–û—Å–Ω–æ–≤–Ω–æ–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"""
    logger.info("üîÑ –ó–ê–ü–£–°–ö –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê –° –ö–û–†–û–¢–ö–ò–ú –ö–£–õ–î–ê–£–ù–û–ú")
    
    while True:
        try:
            found, message, message_id = check_discord_messages()
            
            if found:
                logger.info(f"üéØ –û–¢–ü–†–ê–í–õ–Ø–Æ –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –î–õ–Ø –°–û–û–ë–©–ï–ù–ò–Ø {message_id}!")
                success = send_telegram(message)
                if success:
                    logger.info("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram!")
                else:
                    logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram")
            else:
                logger.info("üîç –ù–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å Tomato –Ω–µ—Ç")
                
            time.sleep(10)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")
            time.sleep(30)

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
if __name__ == '__main__':
    logger.info("üöÄ –ó–ê–ü–£–°–ö –°–ò–°–¢–ï–ú–´ –° –ö–û–†–û–¢–ö–ò–ú –ö–£–õ–î–ê–£–ù–û–ú (4.5 –º–∏–Ω—É—Ç—ã)")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    monitor_thread = threading.Thread(target=discord_monitor)
    monitor_thread.daemon = True
    monitor_thread.start()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ
    send_telegram("üîç –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω! –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Tomato —Å –∫—É–ª–¥–∞—É–Ω–æ–º 4.5 –º–∏–Ω—É—Ç—ã...")
    
    app.run(host='0.0.0.0', port=5000)
