from flask import Flask
import requests
import os
import time
import logging
import threading
from datetime import datetime

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(message)s')
logger = logging.getLogger(__name__)

app = Flask(__name__)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
TELEGRAM_CHAT_ID = os.getenv('TELEGRAM_CHAT_ID')
DISCORD_TOKEN = os.getenv('DISCORD_TOKEN')
DISCORD_CHANNEL_ID = os.getenv('DISCORD_CHANNEL_ID')

logger.info("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
logger.info(f"TELEGRAM_TOKEN: {'‚úÖ' if TELEGRAM_TOKEN else '‚ùå'}")
logger.info(f"TELEGRAM_CHAT_ID: {'‚úÖ' if TELEGRAM_CHAT_ID else '‚ùå'}")
logger.info(f"DISCORD_TOKEN: {'‚úÖ' if DISCORD_TOKEN else '‚ùå'}")
logger.info(f"DISCORD_CHANNEL_ID: {'‚úÖ' if DISCORD_CHANNEL_ID else '‚ùå'}")

# –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
processed_messages = set()

def send_telegram(text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"""
    if not TELEGRAM_TOKEN or not TELEGRAM_CHAT_ID:
        logger.error("‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω Telegram")
        return False
        
    try:
        url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
        data = {"chat_id": TELEGRAM_CHAT_ID, "text": text}
        response = requests.post(url, data=data, timeout=10)
        
        if response.status_code == 200:
            logger.info(f"üì± –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram: {text}")
            return True
        else:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ Telegram: {response.status_code}")
            return False
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram: {e}")
        return False

def check_discord_messages():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Discord –∫–∞–Ω–∞–ª–µ"""
    if not DISCORD_TOKEN or not DISCORD_CHANNEL_ID:
        logger.error("‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω Discord")
        return False
        
    try:
        url = f"https://discord.com/api/v10/channels/{DISCORD_CHANNEL_ID}/messages?limit=10"
        headers = {"Authorization": f"Bot {DISCORD_TOKEN}"}
        
        logger.info("üîç –ó–∞–ø—Ä–æ—Å –∫ Discord API...")
        response = requests.get(url, headers=headers, timeout=10)
        
        if response.status_code == 200:
            messages = response.json()
            logger.info(f"üì® –ü–æ–ª—É—á–µ–Ω–æ {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ Discord")
            
            for message in messages:
                message_id = message['id']
                author = message.get('author', {}).get('username', 'Unknown')
                content = message.get('content', '')[:200]  # –ü–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤
                
                # –õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –í—É–ª–∫–∞–Ω–∞
                if 'Vulcan' in author:
                    logger.info(f"üë§ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {author}: {content}...")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–æ–≤–æ–µ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    if message_id not in processed_messages:
                        logger.info(f"üÜï –ù–û–í–û–ï —Å–æ–æ–±—â–µ–Ω–∏–µ –í—É–ª–∫–∞–Ω–∞! ID: {message_id}")
                        processed_messages.add(message_id)
                        
                        # –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
                        if any(word in content for word in ['Tomato', 'Carrot', 'Strawberry', 'SEEDS', 'STOCK']):
                            logger.info("üéØ –û–ë–ù–ê–†–£–ñ–ï–ù–´ –°–ï–ú–ï–ù–ê!")
                            send_telegram(f"üéØ –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å–µ–º–µ–Ω–∞ –≤ —Å—Ç–æ–∫–µ! –ü—Ä–æ–≤–µ—Ä—å Discord.")
                            return True
            
            return False
        else:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ Discord API: {response.status_code}")
            if response.status_code == 401:
                logger.error("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π Discord —Ç–æ–∫–µ–Ω!")
            elif response.status_code == 403:
                logger.error("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É!")
            elif response.status_code == 404:
                logger.error("‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return False
            
    except Exception as e:
        logger.error(f"üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ Discord: {e}")
        return False

def monitoring_loop():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    logger.info("üîÑ –ó–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Discord...")
    
    while True:
        try:
            check_discord_messages()
            time.sleep(30)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")
            time.sleep(60)

@app.route('/')
def home():
    logger.info("‚úÖ –ö—Ç–æ-—Ç–æ –∑–∞—à–µ–ª –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É")
    return """
    <h1>üçÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ–º—è–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç!</h1>
    <p>–ü—Ä–æ–≤–µ—Ä—è—é Discord –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥</p>
    <p><a href="/test">–¢–µ—Å—Ç Discord</a> | <a href="/test_telegram">–¢–µ—Å—Ç Telegram</a></p>
    <p>–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {}</p>
    """.format(len(processed_messages))

@app.route('/test')
def test_discord():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Discord"""
    logger.info("üß™ –¢–µ—Å—Ç Discord API")
    result = check_discord_messages()
    return f"–¢–µ—Å—Ç Discord: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if result else '‚ùå –û—à–∏–±–∫–∞ –∏–ª–∏ —Å–µ–º–µ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'}"

@app.route('/test_telegram')
def test_telegram():
    """–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram"""
    logger.info("üß™ –¢–µ—Å—Ç Telegram")
    success = send_telegram("üîî –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞ - —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    return f"–¢–µ—Å—Ç Telegram: {'‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' if success else '‚ùå –û—à–∏–±–∫–∞'}"

@app.route('/reset')
def reset():
    """–°–±—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    global processed_messages
    processed_messages = set()
    logger.info("üîÑ –°–±—Ä–æ—à–µ–Ω—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
    return "‚úÖ –°–±—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω! –ë–æ—Ç –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞–Ω–æ–≤–æ."

# –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ñ–æ–Ω–µ
threading.Thread(target=monitoring_loop, daemon=True).start()

if __name__ == '__main__':
    logger.info("üöÄ –ë–û–¢ –ó–ê–ü–£–©–ï–ù –ò –ù–ê–ß–ò–ù–ê–ï–¢ –ú–û–ù–ò–¢–û–†–ò–ù–ì!")
    app.run(host='0.0.0.0', port=5000)
