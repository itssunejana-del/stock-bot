from flask import Flask
import requests
import os
import time
import logging
import threading

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(message)s')
logger = logging.getLogger()

app = Flask(__name__)

TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
TELEGRAM_CHAT_ID = os.getenv('TELEGRAM_CHAT_ID')
GARDEN_BOT_ID = 7859360521  # ID –±–æ—Ç–∞ @gargenstockbot

def send_telegram(text):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    data = {"chat_id": TELEGRAM_CHAT_ID, "text": text}
    try:
        requests.post(url, data=data)
        logger.info("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ Telegram: {e}")

def send_to_garden_bot(message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É @gargenstockbot –ø–æ ID"""
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    data = {"chat_id": GARDEN_BOT_ID, "text": message}
    try:
        response = requests.post(url, data=data)
        if response.json().get('ok'):
            logger.info(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –±–æ—Ç—É: {message}")
            return True
        else:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.json()}")
            return False
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–æ—Ç—É: {e}")
        return False

def monitor_responses():
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç –æ—Ç–≤–µ—Ç—ã –æ—Ç @gargenstockbot"""
    logger.info("üëÇ –ù–∞—á–∏–Ω–∞—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Ç–≤–µ—Ç–æ–≤...")
    last_update_id = 0
    
    while True:
        try:
            url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/getUpdates"
            params = {"offset": last_update_id + 1, "timeout": 30}
            response = requests.get(url, params=params).json()
            
            for update in response.get('result', []):
                last_update_id = update['update_id']
                
                if (update.get('message') and 
                    update['message'].get('text') and
                    '–ü–æ–º–∏–¥–æ—Ä' in update['message']['text']):
                    
                    logger.info("üçÖ –ù–ê–ô–î–ï–ù –ü–û–ú–ò–î–û–† –í –û–¢–í–ï–¢–ï!")
                    send_telegram("üçÖ üçÖ üçÖ –ü–û–ú–ò–î–û–† –û–ë–ù–ê–†–£–ñ–ï–ù! üçÖ üçÖ üçÖ")
                    send_telegram(f"üìã –°–æ–æ–±—â–µ–Ω–∏–µ: {update['message']['text']}")
                    
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")
            
        time.sleep(5)

def auto_request_stock():
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Å—Ç–æ–∫"""
    logger.info("ü§ñ –ó–∞–ø—É—Å–∫–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã...")
    
    while True:
        try:
            # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º /start
            logger.info("üîÑ –û—Ç–ø—Ä–∞–≤–ª—è—é /start –±–æ—Ç—É...")
            success_start = send_to_garden_bot("/start")
            time.sleep(3)
            
            # –ó–∞—Ç–µ–º –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Ç–æ–∫
            logger.info("üîÑ –û—Ç–ø—Ä–∞–≤–ª—è—é 'üå± –°—Ç–æ–∫'...")
            success_stock = send_to_garden_bot("üå± –°—Ç–æ–∫")
            
            if success_start and success_stock:
                logger.info("‚úÖ –ö–æ–º–∞–Ω–¥—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã")
            else:
                logger.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥")
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            
        time.sleep(60)

@app.route('/')
def home():
    return "ü§ñ –ú–æ–Ω–∏—Ç–æ—Ä—é @gargenstockbot —á–µ—Ä–µ–∑ getUpdates"

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–∞ –ø–æ—Ç–æ–∫–∞
logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞—é —Å–∏—Å—Ç–µ–º—É...")
monitor_thread = threading.Thread(target=monitor_responses)
monitor_thread.daemon = True
monitor_thread.start()

request_thread = threading.Thread(target=auto_request_stock)
request_thread.daemon = True
request_thread.start()

send_telegram("üîç –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞! –ú–æ–Ω–∏—Ç–æ—Ä—é @gargenstockbot –ø–æ ID")

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
