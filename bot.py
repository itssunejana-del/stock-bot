from flask import Flask, request
import requests
import os
import time
import logging
import json
import threading

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(message)s')
logger = logging.getLogger()

app = Flask(__name__)

TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
TELEGRAM_CHAT_ID = os.getenv('TELEGRAM_CHAT_ID')
WEBHOOK_URL = "https://stock-bot-cj4s.onrender.com/webhook"
GARDEN_BOT_USERNAME = "@gargenstockbot"  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π username

# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∞
last_bot_response = ""

def send_telegram(text):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    data = {"chat_id": TELEGRAM_CHAT_ID, "text": text}
    try:
        requests.post(url, data=data)
        logger.info("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ Telegram: {e}")

def send_to_garden_bot(message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É @gargenstockbot"""
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    data = {
        "chat_id": GARDEN_BOT_USERNAME,
        "text": message
    }
    try:
        response = requests.post(url, data=data)
        logger.info(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –±–æ—Ç—É: {message}")
        return True
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–æ—Ç—É: {e}")
        return False

def setup_webhook():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤–µ–±—Ö—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π"""
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/setWebhook"
    data = {"url": WEBHOOK_URL}
    try:
        response = requests.post(url, data=data)
        logger.info(f"‚úÖ –í–µ–±—Ö—É–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {response.json()}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞: {e}")

@app.route('/webhook', methods=['POST'])
def webhook():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç Telegram"""
    global last_bot_response
    
    try:
        data = request.json
        logger.info(f"üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Telegram")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        if (data.get('message') and data['message'].get('text')):
            message_text = data['message']['text']
            last_bot_response = message_text
            
            # –ò—â–µ–º –ü–æ–º–∏–¥–æ—Ä –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
            if '–ü–æ–º–∏–¥–æ—Ä' in message_text:
                logger.info("üçÖ –ù–ê–ô–î–ï–ù –ü–û–ú–ò–î–û–† –í –°–û–û–ë–©–ï–ù–ò–ò!")
                send_telegram("üçÖ üçÖ üçÖ –ü–û–ú–ò–î–û–† –û–ë–ù–ê–†–£–ñ–ï–ù! üçÖ üçÖ üçÖ")
                send_telegram(f"üìã –°–æ–æ–±—â–µ–Ω–∏–µ: {message_text}")
        
        return 'OK'
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤–µ–±—Ö—É–∫–∞: {e}")
        return 'ERROR'

def auto_request_stock():
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Å—Ç–æ–∫ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É"""
    logger.info("ü§ñ –ó–∞–ø—É—Å–∫–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã —Å—Ç–æ–∫–∞...")
    
    while True:
        try:
            # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º /start –±–æ—Ç—É
            logger.info("üîÑ –û—Ç–ø—Ä–∞–≤–ª—è—é /start –±–æ—Ç—É...")
            success_start = send_to_garden_bot("/start")
            time.sleep(3)  # –ñ–¥–µ–º –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
            
            # –ó–∞—Ç–µ–º –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Ç–æ–∫
            logger.info("üîÑ –û—Ç–ø—Ä–∞–≤–ª—è—é 'üå± –°—Ç–æ–∫'...")
            success_stock = send_to_garden_bot("üå± –°—Ç–æ–∫")
            
            if success_start and success_stock:
                logger.info("‚úÖ –û–±–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
            else:
                logger.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥")
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: {e}")
            
        time.sleep(60)  # –ö–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É

@app.route('/')
def home():
    return "ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞—é —Å—Ç–æ–∫ —É @gargenstockbot –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É"

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤–µ–±—Ö—É–∫ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
logger.info("üöÄ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é –≤–µ–±—Ö—É–∫...")
setup_webhook()

# –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã
logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã...")
request_thread = threading.Thread(target=auto_request_stock)
request_thread.daemon = True
request_thread.start()

send_telegram("üîç –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞! –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞—é —Å—Ç–æ–∫ —É @gargenstockbot –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É")

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
