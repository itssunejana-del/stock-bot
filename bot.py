from flask import Flask
import requests
import os
import time
import logging
import threading
import json

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(message)s')
logger = logging.getLogger(__name__)

app = Flask(__name__)

TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
TELEGRAM_CHAT_ID = os.getenv('TELEGRAM_CHAT_ID')
DISCORD_TOKEN = os.getenv('DISCORD_TOKEN')
DISCORD_CHANNEL_ID = os.getenv('DISCORD_CHANNEL_ID')

def send_telegram(text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"""
    try:
        url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
        data = {"chat_id": TELEGRAM_CHAT_ID, "text": text}
        response = requests.post(url, data=data, timeout=10)
        logger.info(f"üì± Telegram: {response.status_code}")
        return True
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ Telegram: {e}")
        return False

def check_discord_messages():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —ç–º–±–∞–¥—ã –≤ –∫–∞–Ω–∞–ª–µ Discord"""
    try:
        url = f"https://discord.com/api/v10/channels/{DISCORD_CHANNEL_ID}/messages?limit=10"
        headers = {"Authorization": f"Bot {DISCORD_TOKEN}"}
        
        logger.info("üîç –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π...")
        response = requests.get(url, headers=headers, timeout=10)
        
        if response.status_code == 200:
            messages = response.json()
            logger.info(f"üì® –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(messages)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            for i, message in enumerate(messages):
                message_id = message['id']
                author = message['author']['username']
                content = message.get('content', '')
                embeds = message.get('embeds', [])
                
                logger.info(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ {i+1} –æ—Ç {author}:")
                logger.info(f"   üÜî ID: {message_id}")
                logger.info(f"   üìÑ –¢–µ–∫—Å—Ç: '{content[:50]}...'" if content else "   üìÑ –¢–µ–∫—Å—Ç: –ü–£–°–¢–û")
                logger.info(f"   üé® –≠–º–±–∞–¥–æ–≤: {len(embeds)}")
                
                # –î–ï–¢–ê–õ–¨–ù–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –≠–ú–ë–ê–î–û–í
                for j, embed in enumerate(embeds):
                    logger.info(f"   üîç –≠–º–±–∞–¥ {j+1}:")
                    
                    # –í—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ–ª—è —ç–º–±–∞–¥–∞
                    title = embed.get('title', '–ù–ï–¢ –ó–ê–ì–û–õ–û–í–ö–ê')
                    description = embed.get('description', '–ù–ï–¢ –û–ü–ò–°–ê–ù–ò–Ø')
                    fields = embed.get('fields', [])
                    
                    logger.info(f"      üìå –ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}")
                    logger.info(f"      üìã –û–ø–∏—Å–∞–Ω–∏–µ: {description[:100]}...")
                    logger.info(f"      üìä –ü–æ–ª–µ–π: {len(fields)}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —á–∞—Å—Ç–∏ —ç–º–±–∞–¥–∞ –Ω–∞ Tomato
                    all_embed_text = f"{title} {description}"
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –ø–æ–ª–µ–π (fields)
                    for field in fields:
                        field_name = field.get('name', '')
                        field_value = field.get('value', '')
                        all_embed_text += f" {field_name} {field_value}"
                    
                    logger.info(f"      üîé –í–µ—Å—å —Ç–µ–∫—Å—Ç —ç–º–±–∞–¥–∞: {all_embed_text[:150]}...")
                    
                    # –ò—â–µ–º Tomato –≤ –ª—é–±–æ–º –≤–∏–¥–µ
                    if any(tomato_keyword in all_embed_text for tomato_keyword in ['Tomato', ':Tomato:', 'üçÖ']):
                        logger.info("üéØ TOMATO –ù–ê–ô–î–ï–ù –í –≠–ú–ë–ê–î–ï!")
                        
                        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
                        telegram_message = f"üö® TOMATO –í –ü–†–û–î–ê–ñ–ï! üçÖ\n\n"
                        
                        if title and title != '–ù–ï–¢ –ó–ê–ì–û–õ–û–í–ö–ê':
                            telegram_message += f"üìå {title}\n"
                        
                        if description and description != '–ù–ï–¢ –û–ü–ò–°–ê–ù–ò–Ø':
                            telegram_message += f"üìã {description}\n"
                        
                        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –µ—Å–ª–∏ –µ—Å—Ç—å
                        for field in fields:
                            field_name = field.get('name', '')
                            field_value = field.get('value', '')
                            if field_name and field_value:
                                telegram_message += f"‚Ä¢ {field_name}: {field_value}\n"
                        
                        return True, telegram_message
                
                # –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
                if any(tomato_keyword in content for tomato_keyword in ['Tomato', ':Tomato:', 'üçÖ']):
                    logger.info("üéØ TOMATO –ù–ê–ô–î–ï–ù –í –¢–ï–ö–°–¢–ï!")
                    return True, f"üö® TOMATO –í –ü–†–û–î–ê–ñ–ï! üçÖ\n\n{content}"
            
            return False, "Tomato –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö"
        else:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ Discord API: {response.status_code}")
            return False, f"–û—à–∏–±–∫–∞ API: {response.status_code}"
            
    except Exception as e:
        logger.error(f"üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")
        return False, f"–û—à–∏–±–∫–∞: {str(e)}"

@app.route('/')
def home():
    return """
    <h1>üçÖ Tomato Monitor Bot</h1>
    <p>–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç –∫–∞–Ω–∞–ª Discord!</p>
    <p><a href="/check">üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è (–î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó)</a></p>
    <p><a href="/test">üß™ –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</a></p>
    """

@app.route('/check')
def check_messages():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º"""
    logger.info("üîç –ó–ê–ü–£–°–ö –î–ï–¢–ê–õ–¨–ù–û–ô –ü–†–û–í–ï–†–ö–ò –°–û–û–ë–©–ï–ù–ò–ô")
    found, message = check_discord_messages()
    
    result = "üçÖ TOMATO –ù–ê–ô–î–ï–ù!" if found else "‚ùå Tomato –Ω–µ –Ω–∞–π–¥–µ–Ω"
    
    return f"""
    <h1>–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏</h1>
    <p>–†–µ–∑—É–ª—å—Ç–∞—Ç: <b>{result}</b></p>
    <p>–°–æ–æ–±—â–µ–Ω–∏–µ: {message}</p>
    <p><small>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ Render –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏</small></p>
    <p><a href="/">‚Üê –ù–∞–∑–∞–¥</a></p>
    """

@app.route('/test')
def test_notification():
    """–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç fake —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"""
    test_message = """Vulcan ‚Ä¢ Grow a Garden Stocks
SEEDS STOCK
:Tomato: Tomato x5
:Carrot: Carrot x10
:Strawberry: Strawberry x3"""
    
    send_telegram("üß™ –¢–ï–°–¢: TOMATO –í –ü–†–û–î–ê–ñ–ï! üçÖ")
    send_telegram(f"üìã {test_message}")
    
    return """
    <h1>üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!</h1>
    <p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram - –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–π—Ç–∏ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ Tomato</p>
    <p><a href="/">‚Üê –ù–∞–∑–∞–¥</a></p>
    """

def discord_monitor():
    """–û—Å–Ω–æ–≤–Ω–æ–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"""
    logger.info("üîÑ –ó–ê–ü–£–°–ö –û–°–ù–û–í–ù–û–ì–û –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê")
    
    last_detected = False
    
    while True:
        try:
            found, message = check_discord_messages()
            
            if found and not last_detected:
                logger.info("üéØ TOMATO –û–ë–ù–ê–†–£–ñ–ï–ù - –û–¢–ü–†–ê–í–õ–Ø–Æ –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!")
                send_telegram(message)
                last_detected = True
            elif not found:
                last_detected = False
                
            time.sleep(30)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")
            time.sleep(60)

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
if __name__ == '__main__':
    logger.info("üöÄ –ó–ê–ü–£–°–ö –°–ò–°–¢–ï–ú–´")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    monitor_thread = threading.Thread(target=discord_monitor)
    monitor_thread.daemon = True
    monitor_thread.start()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ
    send_telegram("üîç –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω! –ù–∞—á–∏–Ω–∞—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Tomato...")
    
    app.run(host='0.0.0.0', port=5000)
