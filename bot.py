from flask import Flask
import requests
import os
import time
import logging
import threading
import sys

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(sys.stdout),
        logging.FileHandler('bot_debug.log')
    ]
)
logger = logging.getLogger(__name__)

app = Flask(__name__)

# –õ–æ–≥–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–±–µ–∑ —Ç–æ–∫–µ–Ω–æ–≤)
logger.info("üîß –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø:")
logger.info(f"üìù TELEGRAM_TOKEN: {'–ï–°–¢–¨' if os.getenv('TELEGRAM_TOKEN') else '–ù–ï–¢'}")
logger.info(f"üìù TELEGRAM_CHAT_ID: {'–ï–°–¢–¨' if os.getenv('TELEGRAM_CHAT_ID') else '–ù–ï–¢'}")
logger.info(f"üìù DISCORD_TOKEN: {'–ï–°–¢–¨' if os.getenv('DISCORD_TOKEN') else '–ù–ï–¢'}")
logger.info(f"üìù DISCORD_CHANNEL_ID: {'–ï–°–¢–¨' if os.getenv('DISCORD_CHANNEL_ID') else '–ù–ï–¢'}")

TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
TELEGRAM_CHAT_ID = os.getenv('TELEGRAM_CHAT_ID')
DISCORD_TOKEN = os.getenv('DISCORD_TOKEN')
DISCORD_CHANNEL_ID = os.getenv('DISCORD_CHANNEL_ID')

def test_discord_connection():
    """–¢–ï–°–¢–ò–†–£–ï–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –ö DISCORD –° –î–ï–¢–ê–õ–¨–ù–´–ú –õ–û–ì–ò–†–û–í–ê–ù–ò–ï–ú"""
    try:
        logger.info("üöÄ –ù–ê–ß–ò–ù–ê–Æ –¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö DISCORD")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞
        url = "https://discord.com/api/v10/users/@me"
        headers = {"Authorization": f"Bot {DISCORD_TOKEN}"}
        
        logger.debug(f"üîó URL: {url}")
        logger.debug(f"üìù –ó–∞–≥–æ–ª–æ–≤–∫–∏: Authorization: Bot {DISCORD_TOKEN[:15]}...")
        
        response = requests.get(url, headers=headers, timeout=10)
        
        logger.info(f"üì° –û–¢–í–ï–¢ DISCORD API:")
        logger.info(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        logger.info(f"   –¢–µ–∫—Å—Ç: {response.text[:200]}...")
        
        if response.status_code == 200:
            bot_data = response.json()
            logger.info(f"‚úÖ –ë–û–¢ –£–°–ü–ï–®–ù–û –ü–û–î–ö–õ–Æ–ß–ï–ù:")
            logger.info(f"   –ò–º—è: {bot_data['username']}#{bot_data['discriminator']}")
            logger.info(f"   ID: {bot_data['id']}")
            return True, "–ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω"
        else:
            logger.error(f"‚ùå –û–®–ò–ë–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø: {response.status_code}")
            return False, f"–û—à–∏–±–∫–∞ {response.status_code}: {response.text}"
            
    except requests.exceptions.Timeout:
        logger.error("‚è∞ –¢–ê–ô–ú–ê–£–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö DISCORD")
        return False, "–¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
    except requests.exceptions.ConnectionError:
        logger.error("üåê –û–®–ò–ë–ö–ê –°–û–ï–î–ò–ù–ï–ù–ò–Ø –° DISCORD")
        return False, "–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"
    except Exception as e:
        logger.error(f"üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {str(e)}", exc_info=True)
        return False, f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}"

def send_telegram(text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"""
    try:
        url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
        data = {"chat_id": TELEGRAM_CHAT_ID, "text": text}
        response = requests.post(url, data=data, timeout=10)
        logger.info(f"üì± Telegram –æ—Ç–≤–µ—Ç: {response.status_code}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ Telegram: {e}")

@app.route('/')
def home():
    return "üçÖ –ú–æ–Ω–∏—Ç–æ—Ä—é –∫–∞–Ω–∞–ª –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç Tomato"

@app.route('/test')
def test():
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"""
    logger.info("üß™ –ó–ê–ü–£–°–ö –¢–ï–°–¢–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø")
    success, message = test_discord_connection()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ Telegram
    status = "‚úÖ –£–°–ü–ï–•" if success else "‚ùå –û–®–ò–ë–ö–ê"
    send_telegram(f"{status}: {message}")
    
    return f"""
    <h1>–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞</h1>
    <p>–°—Ç–∞—Ç—É—Å: <b>{status}</b></p>
    <p>–°–æ–æ–±—â–µ–Ω–∏–µ: {message}</p>
    <p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ Render –¥–ª—è –¥–µ—Ç–∞–ª–µ–π</p>
    """

def start_monitoring():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞"""
    logger.info("üîÑ –ó–ê–ü–£–°–ö –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê...")
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    
    # –¢–µ—Å—Ç–æ–≤—ã–π —Ü–∏–∫–ª
    while True:
        success, message = test_discord_connection()
        if success:
            logger.info("üéØ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç, –º–æ–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")
            break
        else:
            logger.error("üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥...")
            time.sleep(30)

if __name__ == '__main__':
    logger.info("üöÄ –ó–ê–ü–£–°–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    success, message = test_discord_connection()
    
    if success:
        send_telegram("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ Discord!")
        logger.info("‚úÖ –ù–∞—á–∏–Ω–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")
        monitor_thread = threading.Thread(target=start_monitoring)
        monitor_thread.daemon = True
        monitor_thread.start()
    else:
        send_telegram(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {message}")
        logger.error("‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
    
    app.run(host='0.0.0.0', port=5000)
